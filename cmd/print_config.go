package cmd

import (
	"fmt"

	"github.com/oshokin/protolinter/internal/checker"
	"github.com/oshokin/protolinter/internal/config"
	"github.com/spf13/cobra"
)

// printConfigCmd represents the "print-config" subcommand.
var printConfigCmd = &cobra.Command{
	Use:   "print-config [files...]",
	Short: "Generate and print a configuration file with protobuf element names",
	Long: `The 'print-config' command generates a configuration file containing full names
for protobuf elements found in the provided files and prints it to the console.`,
	Example: "protolinter print-config --config=config.yaml file.proto       " +
		"# Generate and print configuration with full protobuf element names " +
		"(only elements with errors will be printed)",
	Args: cobra.MinimumNArgs(1),
	Run: func(cmd *cobra.Command, files []string) {
		flags := cmd.Flags()

		printAllDescriptors, _ := flags.GetBool("all")
		configPath, _ := flags.GetString("config")
		githubURL, _ := flags.GetString("github-url")
		isMimirFile, _ := flags.GetBool("mimir")

		checker.ExecutePrintConfig(files, configPath, githubURL, isMimirFile, printAllDescriptors)
	},
}

func init() { //nolint: gochecknoinits // Code is generated by cobra-cli.
	flags := printConfigCmd.Flags()

	flags.BoolP("all", "a", false,
		"include all protobuf element names in the configuration, including correct ones")
	flags.StringP("config", "c", "",
		fmt.Sprintf("path to the custom configuration file (default is '%s')",
			config.DefaultConfigName))
	flags.StringP("github-url", "g", "",
		"path to the custom file repository to replace github.com links in imported protobuf file paths")
	flags.BoolP("mimir", "m", false,
		"path to the mimir file containing a list of paths containing protobuf files, "+
			"if this flag is set, the first file specified as an argument is expected to be the mimir file")

	rootCmd.AddCommand(printConfigCmd)
}
